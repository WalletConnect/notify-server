name: ❖ App - Check

on:
  workflow_call:

env:
  RUST_BACKTRACE: full

permissions:
  contents: read

jobs:
  clippy:
    name: Clippy
    runs-on:
      group: ${{ vars.RUN_GROUP }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: "Install Rust ${{ inputs.version }}"
        uses: WalletConnect/actions-rs/toolchain@1.0.0
        with:
          toolchain: ${{ vars.RUST_VERSION }}
          profile: 'minimal'
          components: 'cargo,clippy'
          override: true

      - name: Install Protoc
        uses: arduino/setup-protoc@v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.3

      - name: "Clippy"
        uses: WalletConnect/actions-rs/cargo@1.0.0
        with:
          command: clippy
          args: --all-features --tests -- -D warnings

  formatting:
    name: Formatting
    runs-on:
      group: ${{ vars.RUN_GROUP }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: "Install Rust ${{ inputs.version }}"
        uses: WalletConnect/actions-rs/toolchain@1.0.0
        with:
          toolchain: ${{ vars.RUST_VERSION }}
          profile: 'default'
          override: true

      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.3

      - name: "Check Formatting"
        uses: WalletConnect/actions-rs/cargo@1.0.0
        with:
          command: fmt
          args: -- --check

  tests:
    name: Tests
    runs-on:
      group: ${{ vars.RUN_GROUP }}
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: "Install Rust ${{ inputs.version }}"
        uses: WalletConnect/actions-rs/toolchain@1.0.0
        with:
          toolchain: ${{ vars.RUST_VERSION }}
          profile: 'default'
          override: true

      - name: Install Protoc
        uses: arduino/setup-protoc@v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.3

      - name: "Unit Tests"
        uses: WalletConnect/actions-rs/cargo@1.0.0
        with:
          command: test
          args: --all-features --lib --bins

      - name: "Integration Tests"
        uses: WalletConnect/actions-rs/cargo@1.0.0
        with:
          command: test
          args: --test integration -- --test-threads=1
        env:
          PROJECT_ID: ${{ secrets.PROJECT_ID }}

  cargo-deny:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: EmbarkStudios/cargo-deny-action@v1
        with:
          command: check license
