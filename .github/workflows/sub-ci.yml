name: ❖ Local CI

on:
  workflow_call:
    inputs:
      check-infra:
        description: "Deploy infrastructure"
        type: boolean
        default: true
      check-app:
        description: "Deploy app"
        type: boolean
        default: true
    secrets:
      PROJECT_ID:
        required: true

permissions:
  contents: read
  id-token: write
  issues: read
  pull-requests: write

env:
  RUST_BACKTRACE: full

jobs:
  ci:
    name: /
    secrets: inherit
    uses: WalletConnect/ci_workflows/.github/workflows/ci.yml@0.1.2
    with:
      check-infra: ${{ inputs.check-infra }}
      check-app: ${{ inputs.check-app }}

  integration:
    name: Integration Tests
    if: ${{ inputs.check-app }}
    runs-on:
      group: ${{ vars.RUN_GROUP }}
    env:
      PROJECT_ID: ${{ secrets.PROJECT_ID }}
      RELAY_DOT_ENV: ${{ secrets.RELAY_DOT_ENV }}
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - 5432:5432
        options: >-
          --mount type=tmpfs,destination=/var/lib/postgresql/data
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:7-alpine
        ports:
          - 6378:6379
    steps:
      # https://github.com/orgs/community/discussions/26688#discussioncomment-3252882
      - name: "Set some postgres settings"
        run: |
          docker exec ${{ job.services.postgres.id }} sh -c 'cat /var/lib/postgresql/data/postgresql.conf'
          docker exec ${{ job.services.postgres.id }} sh -c 'echo "max_connections=500" >> /var/lib/postgresql/data/postgresql.conf'
          docker kill --signal=SIGHUP ${{ job.services.postgres.id }}

      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.RELEASE_PAT }}

      - name: Install Rust ${{ vars.RUST_VERSION }}
        uses: WalletConnect/actions-rs/toolchain@1.1.0
        with:
          toolchain: ${{ vars.RUST_VERSION }}
          profile: 'default'
          override: true

      - name: Install Protoc
        uses: arduino/setup-protoc@v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.3

      - name: Build Relay
        run: |
          cargo build
        working-directory: rs-relay

      - name: Start relay dependencies
        run: |
          cargo install just
          just run-storage-docker
        working-directory: rs-relay

      - uses: JarvusInnovations/background-action@v1
        name: Start Relay
        with:
          run: |
            echo "${{ env.RELAY_DOT_ENV }}" | base64 -d > .env
            source .env
            cargo run &
          wait-on: |
            tcp:127.0.0.1:8888
          log-output-resume: stderr
          log-output-if: failure
          working-directory: rs-relay

      - name: Integration Tests
        uses: WalletConnect/actions-rs/cargo@1.1.0
        with:
          command: test
          args: --test integration
