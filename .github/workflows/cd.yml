name: cd
on:
  workflow_dispatch:
  workflow_call:

concurrency:
  # Only allow for one action to run at once, queue any others
  group: cd
  # Don't cancel existing
  cancel-in-progress: false

jobs:
  ##############################################################################
  # Versioning

  get-version:
    permissions:
      contents: read
    # if: ${{ github.ref == 'enable when a version is available' }}
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.clean_version.outputs.version }}
    steps:
      - name: Get latest release
        id: latest_release
        uses: pozetroninc/github-action-get-latest-release@master
        if: github.event_name != 'release'
        with:
          repository: ${{ github.repository }}
          excludes: draft

      - name: Get release value
        id: get
        uses: actions/github-script@v6
        env:
          LATEST_TAG: ${{ steps.latest_release.outputs.release }}
        with:
          result-encoding: string
          script: |
            if (context.eventName == "release") {
              return context.payload.release.tag_name
            } else {
              return process.env.LATEST_TAG
            }

      - name: Clean version
        id: clean_version
        run: |
          version=$(echo "${{ steps.get.outputs.result }}" | sed 's/v//g')
          echo "version=$version" >> $GITHUB_OUTPUT

  ##############################################################################
  # Staging

  deploy-infra-staging:
    needs:
      - get-version
    uses: ./.github/workflows/deploy-infra.yml
    with:
      version: ${{ needs.get-version.outputs.version }}
      environment: "staging"
      environment_url: https://staging.notify.walletconnect.com/health
      relay_url: "wss://staging.relay.walletconnect.com"
      notify_url: "https://staging.notify.walletconnect.com"
    secrets:
      aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      tf_api_token: ${{ secrets.TF_API_TOKEN }}
      keypair_seed: ${{ secrets.KEYPAIR_SEED }}
      project_id: ${{ secrets.PROJECT_ID }}
      registry_auth_token: ${{ secrets.STAGING_REGISTRY_AUTH_TOKEN }}

  validate-staging-rust:
    needs: deploy-infra-staging
    uses: ./.github/workflows/validate.yml
    with:
      environment: "STAGING"
    secrets:
      notify_project_secret: ${{ secrets.STAGING_NOTIFY_PROJECT_SECRET }}
      test_project_id: ${{ secrets.STAGING_TEST_PROJECT_ID }}
      test_relay_project_id: ${{ secrets.TEST_PROJECT_ID }}

  validate-staging-swift:
    needs: deploy-infra-staging
    uses: ./.github/workflows/validate_swift.yml
    with:
      notify-endpoint: 'staging.notify.walletconnect.com'
      relay-endpoint: 'staging.relay.walletconnect.com'
    secrets:
      project_id: ${{ secrets.SWIFT_INTEGRATION_TESTS_PROJECT_ID }}
      dapp_project_id: ${{ secrets.SWIFT_INTEGRATION_TESTS_DAPP_STAGING_PROJECT_ID }}
      dapp_project_secret: ${{ secrets.SWIFT_INTEGRATION_TESTS_DAPP_STAGING_PROJECT_SECRET }}

  ##############################################################################
  # Prod

  deploy-infra-prod:
    needs:
      - get-version
      - validate-staging-rust
      - validate-staging-swift
    uses: ./.github/workflows/deploy-infra.yml
    with:
      version: ${{ needs.get-version.outputs.version }}
      environment: "prod"
      environment_url: https://notify.walletconnect.com/health
      relay_url: "wss://relay.walletconnect.com"
      notify_url: "https://notify.walletconnect.com"
    secrets:
      aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      tf_api_token: ${{ secrets.TF_API_TOKEN }}
      keypair_seed: ${{ secrets.KEYPAIR_SEED }}
      project_id: ${{ secrets.PROJECT_ID }}
      registry_auth_token: ${{ secrets.REGISTRY_AUTH_TOKEN }}

  validate-prod-rust:
    needs: [deploy-infra-prod]
    uses: ./.github/workflows/validate.yml
    with:
      environment: "PROD"
    secrets:
      notify_project_secret: ${{ secrets.NOTIFY_PROJECT_SECRET }}
      test_project_id: ${{ secrets.TEST_PROJECT_ID }}
      test_relay_project_id: ${{ secrets.TEST_PROJECT_ID }}

  validate-swift-prod:
    needs: [deploy-infra-prod]
    uses: ./.github/workflows/validate_swift.yml
    with:
      notify-endpoint: 'notify.walletconnect.com'
      relay-endpoint: 'relay.walletconnect.com'
    secrets:
      project_id: ${{ secrets.SWIFT_INTEGRATION_TESTS_PROJECT_ID }}
      dapp_project_id: ${{ secrets.SWIFT_INTEGRATION_TESTS_DAPP_PROJECT_ID }}
      dapp_project_secret: ${{ secrets.SWIFT_INTEGRATION_TESTS_DAPP_PROJECT_SECRET }}
